{"version":3,"sources":["components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Section.js","components/PublicRoute.js","components/PrivateRoute.js","routes.js","components/App.js","redux/phone/phoneReducer.js","redux/store.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/phone/phonebookActions.js","redux/auth/authReducer.js","redux/auth/authActions.js"],"names":["connect","state","isAuthenticated","authSelectors","to","exact","className","activeClassName","styles","marginRight","name","getUserName","avatar","onLogout","authOperations","logOut","style","src","alt","width","Button","variant","size","color","onClick","AuthNav","container","display","alignItems","header","justifyContent","Section","children","Component","component","routeProps","render","props","restricted","path","label","lazy","private","App","this","onGetCurrentUser","fallback","CircularProgress","routes","map","route","getCurrentUser","items","createReducer","fetchContactsSuccess","action","payload","addContactsSuccess","newContact","removeContactsSuccess","filter","contact","id","changeFilter","combineReducers","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","phoneReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PERSIST","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","data","registerSuccess","registerError","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","alert","getState","persistedToken","getCurrentUserRequest","get","then","getCurrentUserSuccess","catch","error","getCurrentUserError","user","addContactsRequest","createAction","addContactsError","fetchContactsRequest","fetchContactsError","removeContactsRequest","removeContactsError","initialUserState","email","_"],"mappings":"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","file":"static/js/main.5a45c8e0.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PeopleIcon from \"@material-ui/icons/People\";\n\nimport { authSelectors } from \"../redux/auth\";\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact className=\"nav\" activeClassName=\"active-nav\">\n      <HomeIcon /> <span>Home</span>\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink to=\"/contacts\" className=\"nav\" activeClassName=\"active-nav\">\n        <PeopleIcon /> <span>Contacts</span>\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\nexport default connect(mapStateToProps)(Navigation);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { authSelectors, authOperations } from \"../redux/auth\";\n\nconst styles = {\n  marginRight: \"10px\",\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <>\n    <img style={styles} src={avatar} alt=\"\" width=\"32\" />\n    <span style={styles}> Welcome, in phonebook {name}</span>\n    <Button\n      variant=\"contained\"\n      size=\"small\"\n      color=\"secondary\"\n      onClick={onLogout}\n    >\n      Logout\n    </Button>\n  </>\n);\n\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUserName(state),\n  avatar:\n    \"https://cdn.pixabay.com/photo/2014/04/02/14/10/female-306407_960_720.png\",\n});\n\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\n  UserMenu\n);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst AuthNav = () => (\n  <>\n    <NavLink to=\"/register\" className=\"nav\" activeClassName=\"active-nav\">\n      <PersonAddIcon />\n      <span> Register</span>\n    </NavLink>\n    <NavLink to=\"/login\" className=\"nav\" activeClassName=\"active-nav\">\n      <LockIcon />\n      <span>Login</span>\n    </NavLink>\n  </>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { authSelectors } from \"../redux/auth\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n\n    <div style={styles.container}>\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </div>\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppBar from './AppBar';\n\nfunction Section({ children }) {\n  return (\n    <section>\n      <AppBar />\n      <hr />\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { lazy } from \"react\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [\n  {\n    path: \"/\",\n    label: \"Home\",\n    exact: true,\n    component: lazy(() => import(\"./views/Home\")),\n    private: false,\n    restricted: false,\n  },\n  {\n    path: \"/register\",\n    label: \"Register\",\n    exact: true,\n    component: lazy(() => import(\"./views/Register\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/login\",\n    label: \"Login\",\n    exact: true,\n    component: lazy(() => import(\"./views/Login\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/contacts\",\n    label: \"Contacts\",\n    exact: true,\n    component: lazy(() => import(\"./views/Contacts\")),\n    private: true,\n    restricted: false,\n  },\n];\n","import React, { Component, Suspense } from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport Section from \"./Section\";\nimport PublicRoute from \"./PublicRoute\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport routes from \"../routes\";\nimport { authOperations } from \"../redux/auth\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Section>\n          <Suspense\n            fallback={\n              <h1>\n                <CircularProgress />\n              </h1>\n            }\n          >\n            <Switch>\n              {routes.map((route) =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                  <PublicRoute key={route.label} {...route} />\n                )\n              )}\n            </Switch>\n          </Suspense>\n        </Section>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport {\n  addContactsSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n  removeContactsSuccess,\n} from \"./phonebookActions\";\n\nconst onAddContact = (state, action) => {\n  const newContact = action.payload;\n  return [...state, newContact];\n};\n\nconst onRemoveContact = (state, action) =>\n  state.filter((contact) => contact.id !== action.payload);\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, action) => action.payload,\n  [addContactsSuccess]: onAddContact,\n  [removeContactsSuccess]: onRemoveContact,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  PERSIST,\n  REGISTER,\n  REHYDRATE,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport phoneReducer from \"./phone/phoneReducer\";\nimport authReducer from \"./auth/authReducer\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: phoneReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PERSIST, REGISTER],\n    },\n  }),\n});\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import axios from \"axios\";\n\nimport authActions from \"./authActions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    dispatch(authActions.registerSuccess(data));\n  } catch (error) {\n    dispatch(authActions.registerError(error));\n  }\n};\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n\n    token.set(data.token);\n    dispatch(authActions.loginSuccess(data));\n  } catch (error) {\n    dispatch(authActions.loginError(error));\n    alert(\"Incorrect login\");\n  }\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  axios\n    .get(\"/users/current\")\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\n    .catch((error) => authActions.getCurrentUserError(error));\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n  try {\n    const { data } = await axios.post(\"/users/logout\");\n    token.unset();\n    dispatch(authActions.logoutSuccess(data));\n  } catch (error) {\n    dispatch(authActions.logoutError(error));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { register, logOut, logIn, getCurrentUser };\n","const isAuthenticated = (state) => state.auth.token;\n\nconst getUserName = (state) => state.auth.user.name;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { isAuthenticated, getUserName };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsRequest = createAction(\"contacts/addRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addSuccess\");\nexport const addContactsError = createAction(\"contacts/addError\");\n\nexport const fetchContactsRequest = createAction(\"contacts/fetchRequest\");\nexport const fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nexport const fetchContactsError = createAction(\"contacts/fetchError\");\n\nexport const removeContactsRequest = createAction(\"contacts/removeRequest\");\nexport const removeContactsSuccess = createAction(\"contacts/removeSuccess\");\nexport const removeContactsError = createAction(\"contacts/removeError\");\n\nexport const changeFilter = createAction(\"phonebook/filter\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./authActions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n  [authActions.logoutSuccess]: () => initialUserState,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n"],"sourceRoot":""}